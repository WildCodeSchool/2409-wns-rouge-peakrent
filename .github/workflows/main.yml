name: main # a renommer

on:
  pull_request:
    branches: [main, develop]

# A revoir
# jobs:
#   prettier:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           # Make sure the actual branch is checked out when running on pull requests
#           ref: ${{ github.head_ref }}

#       - name: Prettify code
#         uses: creyD/prettier_action@v4.3
#         with:
#           # This part is also where you can pass other options, for example:
#           prettier_options: --write **/*.{js,md}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  test-front:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
      #a verifier pour eslint
      # - name: Run ESLint
      #   run: eslint . --ext .js,.jsx,.ts,.tsx
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install
        run: cd frontend && npm ci
      - name: Run test
        run: cd frontend && npm test

  test-back:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      #a verifier pour eslint
      # - name: Run ESLint
      #   run: eslint . --ext .js,.jsx,.ts,.tsx
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install
        run: cd backend && npm ci
      - name: Run test
        run: cd backend && npm run test:postgres

  build-frontend:
    needs: test-front
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # push: true
          context: "{{defaultContext}}:frontend"
          tags: ${{ vars.DOCKERHUB_FRONTEND_REPO }}:latest, ${{ vars.DOCKERHUB_FRONTEND_REPO }}:${{ github.sha }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-backend:
    needs: test-backend
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # push: true
          context: "{{defaultContext}}:backend"
          tags: ${{ vars.DOCKERHUB_BACKEND_REPO }}:latest, ${{ vars.DOCKERHUB_BACKEND_REPO }}:${{ github.sha }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
